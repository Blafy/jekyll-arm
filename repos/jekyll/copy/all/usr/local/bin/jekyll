#!/bin/bash
[ "$JEKYLL_DEBUG" = "true" ] && set -x
set -e

if [ -z "$CONNECTED" ]; then
  CONNECTED=true
  wget -qs https://google.com >/dev/null || \
    CONNECTED=false
fi

finish() {
  cd /srv/jekyll
  rm -rf .bundle
  rm  -f Gemfile.lock
  rm -rf Gemfile

  cp -pR /tmp/.bundle . 1>/dev/null 2>&1 || true
  cp -p  /tmp/Gemfile.lock . 1>/dev/null 2>&1 || true
  cp -p  /tmp/Gemfile . 1>/dev/null 2>&1 || true
  cd -> /dev/null
  return 0
}

: ${JEKYLL_UID:=$UID}
if [ "$JEKYLL_UID" != "0" ] && [ "$JEKYLL_UID" != "$(id -u jekyll)" ]; then
  reset-user jekyll:"$JEKYLL_UID" \
    > /dev/null 2>&1
fi

chown -R jekyll:jekyll /srv/jekyll/vendor/bundle > /dev/null 2>&1 || true
chown -R jekyll:jekyll /srv/jekyll/_site > /dev/null 2>&1 || true
trap finish EXIT ERR

cd /srv/jekyll
cp -pR .bundle /tmp 1>/dev/null 2>&1 || true
cp -p Gemfile.lock /tmp 1>/dev/null 2>&1 || true
cp -p Gemfile /tmp 1>/dev/null 2>&1 || true
rm -rf .bundle
status=0

if [ "$CONNECTED" = "true" ]; then
  if [ ! -f /updated ]; then
    apk update
    apk add build-base ruby-dev
    touch /updated

    if [ -f ".apk" ] && [ "$CONNECTED" = "true" ]
      then apk --update add $(
        cat .apk
      )
    fi
  fi

  BUNDLE_ARGS="--jobs=1"
  if [ -f Gemfile ]; then
    [ "$BUNDLE_CACHE" = "true" ] && BUNDLE_ARGS="--jobs=1 --path=vendor/bundle"
    bundle check > /dev/null 2>&1 || bundle install "$BUNDLE_ARGS"
    cp -a Gemfile.lock /tmp/Gemfile.lock.offline
    cp -a Gemfile /tmp/Gemfile.offline
  fi
else
  if [ -f "/tmp/Gemfile.offline" ]; then
      cp -a /tmp/Gemfile.offline Gemfile
      cp -a /tmp/Gemfile.lock.offline Gemfile.lock
  fi
fi

CMD="/usr/bin/jekyll"
[ -f Gemfile ] && CMD="bundle exec ruby $CMD"
$CMD "$(/usr/local/bin/default-args "$@")" || \
  exit $?
